#! /usr/local/bin/bash
#
# Usage: nice ./program_name.sh   OR
#        nice ./program_name.sh > key-list  OR
#        nice ./program_name.sh | tee -a key-list

shopt -s nocasematch		# turn off case sensitivity on matches

# Software mines ssh keys for custom tailored fingerprints which you
# ask for, like: de:ad:00:00:00:00:00:00:00:00:00:00:00:00:de:ad 
#
# Don't expect to live long enough to "mine" this one but there are
# plenty of others more attainable like: 8BADF00d...  (ate bad food).

# Program generates an ssh key than checks whether it's fingerprint is on
# a list of desirable ones. If yes, the keyfiles are kept and the program
# finds the next. When a key's fingerprint isn't on the list the key
# is deleted to save disk space.

# To save every keyfile then uncomment the last search term, it
# matches and saves all of them.
#
# The program has been designed to run unattended for long periods, lazyaly
# generating and checking keys for years.  Set it running the background
# on an unused computer and come back some time later to see what fingerprints
# it has turned up.
#
# The ssh-key files are valid keys, adopt and use whichever ones you
# like.
#
# In BASH the largest positive integer is 9223372036854775807
#

# FINGERPRINTS are in the form of pairs of lower-case hexidecimal digits separated
# byt colons, f5:57:ba:87:f6:64:20:bc:c3:4d:73:0e:75:da:12:7c. Enter search strings
# which match what finger prints desired. For example "be:ef" would find keys having
# be:ef in them. For unused search strings use and impossible character combination
# like "::" so they won't match anything.

# Making the search string a single colon ":" will keep every key generated
# When keeping every key file, this program will create millions more files than
# standard Unix commands can process.

# Use this command to delete them:  find . -type f -name "*.key*" -print -delete 

# example fingerprint: f5:57:ba:87:f6:64:20:bc:c3:4d:73:0e:75:da:12:7c
 
# On a slow computer each ssh-keygen requires 1/3 second for a 2048 bit key.
# match: 2 hex digits, 16 per 256 trials / 85 seconds
#        4 hex digits, 15 per 65,536 trials / 4.5 hours
#        5 hex digits, 14 per 1,048,576 / 4 days
#        6 hex digits, 14 per 16,777,216 trials / 65 days
#        8 hex digits, 13 per 4,294,967,296 trials / lifetime
#       16 hex digits,  9 per 18,446,744,073,709,551,616 trials / age of universe+
#	32 hex digits,  1 per 340,282,366,920,938,463,463,374,607,431,768,211,456 trials 
#
# 32 hex digits is 128 bits and requires the age of the universe to match one SSH
# fingerprint exactly. An ssh fingerprint is not the same thing as the encryption
# key. Two ssh keys may have the same fingerprint but not be same encryption
# key.
#
# Notes:
# 1. There is a 15% performance improvement when running from a memory disk 
#    as the file I/O is virtualized. Recommended when running multiple
#    parallel processes on a single machine. On a 8 core machine, you can have
#    8 parallel runs and the system will not be I/O bound like it would if saving
#    to a physical disk.
#

EMAIL="some@email.com"		#email address included on generated keys

SEARCH=()		# bash regular expressions
SEARCH+=("^de:ad:00")
SEARCH+=("00:de:ad$")
SEARCH+=("^de:af:00")
SEARCH+=("00:de:af$")
SEARCH+=("^ca:fe:00")
SEARCH+=("00:ca:fe$")
SEARCH+=("^be:ef:00")
SEARCH+=("00:be:ef$")
SEARCH+=("^ab:be:00")
SEARCH+=("00:ab:be$")
SEARCH+=("^ab:ed:00")
SEARCH+=("00:ab:ed$")
SEARCH+=("^ad:ad:00")
SEARCH+=("00:ad:ad$")
SEARCH+=("^ba:ba:00")
SEARCH+=("00:ba:ba$")
SEARCH+=("^ba:be:00")
SEARCH+=("00:ba:be$")
SEARCH+=("^ba:de:00")
SEARCH+=("00:ba:de$")
SEARCH+=("^be:ad:00")
SEARCH+=("00:be:ad$")
SEARCH+=("^be:da:00")
SEARCH+=("00:be:da$")
SEARCH+=("^be:de:00")
SEARCH+=("00:be:de$")
SEARCH+=("^ca:de:00")
SEARCH+=("00:ca:de$")
SEARCH+=("^ca:ff:00")
SEARCH+=("00:ca:ff$")
SEARCH+=("^ce:de:00")
SEARCH+=("00:ce:de$")
SEARCH+=("^da:ba:00")
SEARCH+=("00:da:ba$")
SEARCH+=("^da:ce:00")
SEARCH+=("00:da:ce$")
SEARCH+=("^da:da:00")
SEARCH+=("00:da:da$")
SEARCH+=("^de:ed:00")
SEARCH+=("00:de:ed$")
SEARCH+=("^ed:da:00")
SEARCH+=("00:ed:da$")
SEARCH+=("^fa:ce:00")
SEARCH+=("00:fa:ce$")
SEARCH+=("^fa:de:00")
SEARCH+=("00:fa:de$")
SEARCH+=("^fe:ed:00")
SEARCH+=("00:fe:ed$")
SEARCH+=("ac:cd:de")
SEARCH+=("be:ed:ed")
SEARCH+=("de:ca:de")
SEARCH+=("de:fa:ce")
SEARCH+=("ef:fa:ce")
SEARCH+=("fa:ca:de")
SEARCH+=("^00:00:00")
SEARCH+=("^11:11:11")
SEARCH+=("^22:22:22")
SEARCH+=("^33:33:33")
SEARCH+=("^44:44:44")
SEARCH+=("^55:55:55")
SEARCH+=("^66:66:66")
SEARCH+=("^77:77:77")
SEARCH+=("^88:88:88")
SEARCH+=("^99:99:99")
SEARCH+=("^aa:aa:aa")
SEARCH+=("^bb:bb:bb")
SEARCH+=("^cc:cc:cc")
SEARCH+=("^dd:dd:dd")
SEARCH+=("^ee:ee:ee")
SEARCH+=("^ff:ff:ff")
SEARCH+=("00:00:00$")
SEARCH+=("11:11:11$")
SEARCH+=("22:22:22$")
SEARCH+=("33:33:33$")
SEARCH+=("44:44:44$")
SEARCH+=("55:55:55$")
SEARCH+=("66:66:66$")
SEARCH+=("77:77:77$")
SEARCH+=("88:88:88$")
SEARCH+=("99:99:99$")
SEARCH+=("aa:aa:aa$")
SEARCH+=("bb:bb:bb$")
SEARCH+=("cc:cc:cc$")
SEARCH+=("dd:dd:dd$")
SEARCH+=("ee:ee:ee$")
SEARCH+=("ff:ff:ff$")
SEARCH+=("^01:23:45")
SEARCH+=("^12:34:56")
SEARCH+=("^ab:cd:ef")
SEARCH+=("^00:01:02")
SEARCH+=("^0a:0b:0c")
SEARCH+=("ab:cd:ef$")
SEARCH+=("07:08:09$")
SEARCH+=("45:67:89$")
SEARCH+=("de:ad.*de:ad") 	# finding patterns fixing 8 or more positions will be a rare occurance
SEARCH+=("de:ad.*be:ef")	# but sometimes you'll discover one
SEARCH+=("de:ad.*ca:fe")
SEARCH+=("fa:ba:ce:ae")
SEARCH+=("(00:*){4}")
SEARCH+=("(11:*){4}")
SEARCH+=("(22:*){4}")
SEARCH+=("(33:*){4}")
SEARCH+=("(44:*){4}")
SEARCH+=("(55:*){4}")
SEARCH+=("(66:*){4}")
SEARCH+=("(77:*){4}")
SEARCH+=("(88:*){4}")
SEARCH+=("(99:*){4}")
SEARCH+=("(aa:*){4}")
SEARCH+=("(bb:*){4}")
SEARCH+=("(cc:*){4}")
SEARCH+=("(dd:*){4}")
SEARCH+=("(ee:*){4}")
SEARCH+=("(ff:*){4}")
SEARCH+=("(0[0-9a-z]:*){8}")
SEARCH+=("(1[0-9a-z]:*){8}")
SEARCH+=("(2[0-9a-z]:*){8}")
SEARCH+=("(3[0-9a-z]:*){8}")
SEARCH+=("(4[0-9a-z]:*){8}")
SEARCH+=("(5[0-9a-z]:*){8}")
SEARCH+=("(6[0-9a-z]:*){8}")
SEARCH+=("(7[0-9a-z]:*){8}")
SEARCH+=("(8[0-9a-z]:*){8}")
SEARCH+=("(9[0-9a-z]:*){8}")
SEARCH+=("(a[0-9a-z]:*){8}")
SEARCH+=("(b[0-9a-z]:*){8}")
SEARCH+=("(c[0-9a-z]:*){8}")
SEARCH+=("(d[0-9a-z]:*){8}")
SEARCH+=("(e[0-9a-z]:*){8}")
SEARCH+=("(f[0-9a-z]:*){8}")
SEARCH+=("([0-9a-z]0:*){8}")
SEARCH+=("([0-9a-z]2:*){8}")
SEARCH+=("([0-9a-z]3:*){8}")
SEARCH+=("([0-9a-z]4:*){8}")
SEARCH+=("([0-9a-z]5:*){8}")
SEARCH+=("([0-9a-z]6:*){8}")
SEARCH+=("([0-9a-z]7:*){8}")
SEARCH+=("([0-9a-z]8:*){8}")
SEARCH+=("([0-9a-z]9:*){8}")
SEARCH+=("([0-9a-z]a:*){8}")
SEARCH+=("([0-9a-z]b:*){8}")
SEARCH+=("([0-9a-z]c:*){8}")
SEARCH+=("([0-9a-z]d:*){8}")
SEARCH+=("([0-9a-z]e:*){8}")
SEARCH+=("([0-9a-z]f:*){8}")
SEARCH+=("([0-9][0-9]:[a-f][a-f]:*){8}") # double digits followed by double characters
SEARCH+=("([a-f][a-f]:[0-9][0-9]:*){8}")
SEARCH+=("([02468ace][02468ace]:*){16}") # even
SEARCH+=("([13579bdf][13579bdf]:*){16}") # odd
SEARCH+=("([02468ace][13579bdf]:*){16}") # even odd
SEARCH+=("([13579bdf][02468ace]:*){16}") # odd even
SEARCH+=("([01234567][01234567]:*){16}") # 0-7
SEARCH+=("([89abcdef][89abcdef]:*){16}")
SEARCH+=("([01234567][89abcdef]:*){16}")
SEARCH+=("([89abcdef][01234567]:*){16}")
SEARCH+=("((00|11|22|33|44|55|66|77|88|99|aa|bb|cc|dd|ee|ff):*){8}") # doubles
SEARCH+=("([0-9][0-9]:*){16}")		# numberic
SEARCH+=("([a-f][a-f]:*){12}")		# mostly alpha
#
# Hex words plus lisoz where 1=l,i; 5=s; 2=z; 0=o
# These words don't stand out visually but it costs little to check for them.
#
SEARCH+=("^8b:ad:f0:0d")
SEARCH+=("^8b:ad.*f0:0d$")
SEARCH+=("8b:ad:f0:0d$")
SEARCH+=("^de:ad:ba:ad")
SEARCH+=("^de:ad.*ba:ad$")
SEARCH+=("^de:ad:ba:ad")
SEARCH+=("^de:ad.*ba:ad$")
SEARCH+=("de:ad:ba:ad$")
SEARCH+=("^de:ad:ba:be")
SEARCH+=("^de:ad.*ba:be$")
SEARCH+=("de:ad:ba:be$")
SEARCH+=("^de:ad:ba:ba")
SEARCH+=("^de:ad.*ba:ba$")
SEARCH+=("de:ad:ba:ba$")
SEARCH+=("^de:ad:be:be")
SEARCH+=("^de:ad.*be:be$")
SEARCH+=("de:ad:be:be$")
SEARCH+=("^fe:e1:de:ad")
SEARCH+=("^fe:e1.*de:ad$")
SEARCH+=("fe:e1:de:ad$")
SEARCH+=("^fa:ce:fe:ed")
SEARCH+=("^fa:ce.*fe:ed$")
SEARCH+=("fa:ce:fe:ed$")
SEARCH+=("^fa:ce:b0:0c")
SEARCH+=("^fa:ce.*b0:0c$")
SEARCH+=("fa:ce:b0:0c$")
SEARCH+=("^ca:fe:ba:be")
SEARCH+=("^ca:fe.*ba:be$")
SEARCH+=("ca:fe:ba:be$")
SEARCH+=("^0f:f1:ce")
SEARCH+=("0f:f1:ce$")
SEARCH+=("^ab:a5:1a")
SEARCH+=("ab:a5:1a$")
SEARCH+=("^ab:a5:1c")
SEARCH+=("ab:a5:1c$")
SEARCH+=("^ab:be:55")
SEARCH+=("ab:be:55$")
SEARCH+=("^ab:e1:1a")
SEARCH+=("ab:e1:1a$")
SEARCH+=("^ab:1a:2e")
SEARCH+=("ab:1a:2e$")
SEARCH+=("^ab:5c:15:5a")
SEARCH+=("ab:5c:15:5a$")
SEARCH+=("^ab:5e:11")
SEARCH+=("ab:5e:11$")
SEARCH+=("^ac:ac:1a")
SEARCH+=("ac:ac:1a$")
SEARCH+=("^ac:ad:1a")
SEARCH+=("ac:ad:1a$")
SEARCH+=("^ac:ce:de")
SEARCH+=("ac:ce:de$")
SEARCH+=("^ac:ce:55")
SEARCH+=("ac:ce:55$")
SEARCH+=("^ac:ce:55:1b:1e")
SEARCH+=("ac:ce:55:1b:1e$")
SEARCH+=("^ac:c0:1a:de")
SEARCH+=("ac:c0:1a:de$")
SEARCH+=("^ac:ed:1a")
SEARCH+=("ac:ed:1a$")
SEARCH+=("^ac:1d:1c")
SEARCH+=("ac:1d:1c$")
SEARCH+=("^ac:1d:05:15")
SEARCH+=("ac:1d:05:15$")
SEARCH+=("^ad:a1:1a")
SEARCH+=("ad:a1:1a$")
SEARCH+=("^ad:d1:ed")
SEARCH+=("ad:d1:ed$")
SEARCH+=("^ad:e1:a1:de")
SEARCH+=("ad:e1:a1:de$")
SEARCH+=("^ad:e1:1e")
SEARCH+=("ad:e1:1e$")
SEARCH+=("^ad:01:e5:ce")
SEARCH+=("ad:01:e5:ce$")
SEARCH+=("^ae:c1:a1")
SEARCH+=("ae:c1:a1$")
SEARCH+=("^ae:01:1a")
SEARCH+=("ae:01:1a$")
SEARCH+=("^ae:01:1c")
SEARCH+=("ae:01:1c$")
SEARCH+=("^ae:01:15")
SEARCH+=("ae:01:15$")
SEARCH+=("^af:1e:1d")
SEARCH+=("af:1e:1d$")
SEARCH+=("^a1:a1:1a")
SEARCH+=("a1:a1:1a$")
SEARCH+=("^a1:be:d0")
SEARCH+=("a1:be:d0$")
SEARCH+=("^a1:b1:22:1a")
SEARCH+=("a1:b1:22:1a$")
SEARCH+=("^a1:ca:1c")
SEARCH+=("a1:ca:1c$")
SEARCH+=("^a1:ce:d0")
SEARCH+=("a1:ce:d0$")
SEARCH+=("^a1:c1:b1:ad:e5")
SEARCH+=("a1:c1:b1:ad:e5$")
SEARCH+=("^a1:d0:5e")
SEARCH+=("a1:d0:5e$")
SEARCH+=("^a1:1d:ad")
SEARCH+=("a1:1d:ad$")
SEARCH+=("^a1:1e:1e")
SEARCH+=("a1:1e:1e$")
SEARCH+=("^a1:11:ce")
SEARCH+=("a1:11:ce$")
SEARCH+=("^a1:11:ed")
SEARCH+=("a1:11:ed$")
SEARCH+=("^a1:11:e5")
SEARCH+=("a1:11:e5$")
SEARCH+=("^a1:0c:a5:1a")
SEARCH+=("a1:0c:a5:1a$")
SEARCH+=("^a1:5a:ce")
SEARCH+=("a1:5a:ce$")
SEARCH+=("^a5:11:1d:ae")
SEARCH+=("a5:11:1d:ae$")
SEARCH+=("^a5:5a:11")
SEARCH+=("a5:5a:11$")
SEARCH+=("^a5:5a:11:ab:1e")
SEARCH+=("a5:5a:11:ab:1e$")
SEARCH+=("^a5:5e:55")
SEARCH+=("a5:5e:55$")
SEARCH+=("^a5:5e:55:ab:1e")
SEARCH+=("a5:5e:55:ab:1e$")
SEARCH+=("^a5:51:2e")
SEARCH+=("a5:51:2e$")
SEARCH+=("^a5:50:c1:ab:1e")
SEARCH+=("a5:50:c1:ab:1e$")
SEARCH+=("^a5:50:11")
SEARCH+=("a5:50:11$")
SEARCH+=("^a2:a1:ea")
SEARCH+=("a2:a1:ea$")
SEARCH+=("^a2:01:1a")
SEARCH+=("a2:01:1a$")
SEARCH+=("^a2:01:1a:ce:ae")
SEARCH+=("a2:01:1a:ce:ae$")
SEARCH+=("^ba:bb:1e")
SEARCH+=("ba:bb:1e$")
SEARCH+=("^ba:be:51:1d:ae")
SEARCH+=("ba:be:51:1d:ae$")
SEARCH+=("^ba:dd:1e")
SEARCH+=("ba:dd:1e$")
SEARCH+=("^ba:ff:1e")
SEARCH+=("ba:ff:1e$")
SEARCH+=("^ba:11:ab:1e")
SEARCH+=("ba:11:ab:1e$")
SEARCH+=("^ba:11:ee")
SEARCH+=("ba:11:ee$")
SEARCH+=("^ba:1b:0a")
SEARCH+=("ba:1b:0a$")
SEARCH+=("^ba:11:ad")
SEARCH+=("ba:11:ad$")
SEARCH+=("^ba:11:ed")
SEARCH+=("ba:11:ed$")
SEARCH+=("^ba:12:ac")
SEARCH+=("ba:12:ac$")
SEARCH+=("^ba:0b:ab")
SEARCH+=("ba:0b:ab$")
SEARCH+=("^ba:5e:ba:11")
SEARCH+=("ba:5e:ba:11$")
SEARCH+=("^ba:5e:1e:55")
SEARCH+=("ba:5e:1e:55$")
SEARCH+=("^ba:51:c5")
SEARCH+=("ba:51:c5$")
SEARCH+=("^ba:51:d1:a1")
SEARCH+=("ba:51:d1:a1$")
SEARCH+=("^ba:51:11:ca")
SEARCH+=("ba:51:11:ca$")
SEARCH+=("^ba:55:1a")
SEARCH+=("ba:55:1a$")
SEARCH+=("^be:ad:ed")
SEARCH+=("be:ad:ed$")
SEARCH+=("^be:ad:1e")
SEARCH+=("be:ad:1e$")
SEARCH+=("^be:da:2e")
SEARCH+=("be:da:2e$")
SEARCH+=("^be:da:22:1e")
SEARCH+=("be:da:22:1e$")
SEARCH+=("^be:dd:ed")
SEARCH+=("be:dd:ed$")
SEARCH+=("^be:fa:11")
SEARCH+=("be:fa:11$")
SEARCH+=("^be:f0:01")
SEARCH+=("be:f0:01$")
SEARCH+=("^be:11:ef")
SEARCH+=("be:11:ef$")
SEARCH+=("^be:11:2e")
SEARCH+=("be:11:2e$")
SEARCH+=("^be:11:15")
SEARCH+=("be:11:15$")
SEARCH+=("^be:55:e1")
SEARCH+=("be:55:e1$")
SEARCH+=("^b1:a5:ed")
SEARCH+=("b1:a5:ed$")
SEARCH+=("^b1:bb:ed")
SEARCH+=("b1:bb:ed$")
SEARCH+=("^b1:b1:1c:a1")
SEARCH+=("b1:b1:1c:a1$")
SEARCH+=("^b1:dd:ab:1e")
SEARCH+=("b1:dd:ab:1e$")
SEARCH+=("^b1:fa:ce")
SEARCH+=("b1:fa:ce$")
SEARCH+=("^b1:fa:c1:a1")
SEARCH+=("b1:fa:c1:a1$")
SEARCH+=("^b1:f0:1d")
SEARCH+=("b1:f0:1d$")
SEARCH+=("^b1:1a:b1:a1")
SEARCH+=("b1:1a:b1:a1$")
SEARCH+=("^b1:11:ed")
SEARCH+=("b1:11:ed$")
SEARCH+=("^b1:11:f0:1d")
SEARCH+=("b1:11:f0:1d$")
SEARCH+=("^b1:ad:ed")
SEARCH+=("b1:ad:ed$")
SEARCH+=("^b1:00:d1:ed")
SEARCH+=("b1:00:d1:ed$")
SEARCH+=("^b0:bb:1e")
SEARCH+=("b0:bb:1e$")
SEARCH+=("^b0:cc:1e")
SEARCH+=("b0:cc:1e$")
SEARCH+=("^b0:d1:ce")
SEARCH+=("b0:d1:ce$")
SEARCH+=("^b0:d1:ed")
SEARCH+=("b0:d1:ed$")
SEARCH+=("^b0:d1:1e:55")
SEARCH+=("b0:d1:1e:55$")
SEARCH+=("^b0:1d:ae")
SEARCH+=("b0:1d:ae$")
SEARCH+=("^b0:11:ed")
SEARCH+=("b0:11:ed$")
SEARCH+=("^b0:1d:fa:ce")
SEARCH+=("b0:1d:fa:ce$")
SEARCH+=("^b0:11:de")
SEARCH+=("b0:11:de$")
SEARCH+=("^b0:0d:1e")
SEARCH+=("b0:0d:1e$")
SEARCH+=("^ca:ba:1a")
SEARCH+=("ca:ba:1a$")
SEARCH+=("^ca:be:11")
SEARCH+=("ca:be:11$")
SEARCH+=("^ca:b0:0d:1e")
SEARCH+=("ca:b0:0d:1e$")
SEARCH+=("^ca:dd:1e")
SEARCH+=("ca:dd:1e$")
SEARCH+=("^ca:ec:a1")
SEARCH+=("ca:ec:a1$")
SEARCH+=("^ca:1a:ba")
SEARCH+=("ca:1a:ba$")
SEARCH+=("^ca:1a:15")
SEARCH+=("ca:1a:15$")
SEARCH+=("^ca:1c:ed")
SEARCH+=("ca:1c:ed$")
SEARCH+=("^ca:1c:1c")
SEARCH+=("ca:1c:1c$")
SEARCH+=("^ca:1c:1f:1c")
SEARCH+=("ca:1c:1f:1c$")
SEARCH+=("^ca:11:c0")
SEARCH+=("ca:11:c0$")
SEARCH+=("^ca:11:ab:1e")
SEARCH+=("ca:11:ab:1e$")
SEARCH+=("^ca:11:a5")
SEARCH+=("ca:11:a5$")
SEARCH+=("^ca:11:ed")
SEARCH+=("ca:11:ed$")
SEARCH+=("^ca:5a:ba")
SEARCH+=("ca:5a:ba$")
SEARCH+=("^ca:5a:15")
SEARCH+=("ca:5a:15$")
SEARCH+=("^ca:5c:ab:e1")
SEARCH+=("ca:5c:ab:e1$")
SEARCH+=("^ca:5c:ad:e5")
SEARCH+=("ca:5c:ad:e5$")
SEARCH+=("^ca:55:1a")
SEARCH+=("ca:55:1a$")
SEARCH+=("^ca:55:1e")
SEARCH+=("ca:55:1e$")
SEARCH+=("^ce:11:ac")
SEARCH+=("ce:11:ac$")
SEARCH+=("^c1:ca:da")
SEARCH+=("c1:ca:da$")
SEARCH+=("^c1:ca:de:11:1d:ae")
SEARCH+=("c1:ca:de:11:1d:ae$")
SEARCH+=("^c1:ca:1a")
SEARCH+=("c1:ca:1a$")
SEARCH+=("^c1:11:a1")
SEARCH+=("c1:11:a1$")
SEARCH+=("^c1:a5:51:c1:5e")
SEARCH+=("c1:a5:51:c1:5e$")
SEARCH+=("^c1:a5:51:c1:2e")
SEARCH+=("c1:a5:51:c1:2e$")
SEARCH+=("^c1:a5:51:c5")
SEARCH+=("c1:a5:51:c5$")
SEARCH+=("^c1:a5:51:f1:ab:1e")
SEARCH+=("c1:a5:51:f1:ab:1e$")
SEARCH+=("^c1:a5:51:f1:ed")
SEARCH+=("c1:a5:51:f1:ed$")
SEARCH+=("^c1:0a:ca")
SEARCH+=("c1:0a:ca$")
SEARCH+=("^c1:05:ed")
SEARCH+=("c1:05:ed$")
SEARCH+=("^c0:a1:e5:ce")
SEARCH+=("c0:a1:e5:ce$")
SEARCH+=("^c0:a1:fa:ce")
SEARCH+=("c0:a1:fa:ce$")
SEARCH+=("^c0:bb:1e")
SEARCH+=("c0:bb:1e$")
SEARCH+=("^c0:cc:a1")
SEARCH+=("c0:cc:a1$")
SEARCH+=("^c0:cc:1d:ae")
SEARCH+=("c0:cc:1d:ae$")
SEARCH+=("^c0:cc:1d:1a")
SEARCH+=("c0:cc:1d:1a$")
SEARCH+=("^c0:c0:b0:10")
SEARCH+=("c0:c0:b0:10$")
SEARCH+=("^c0:dd:1e")
SEARCH+=("c0:dd:1e$")
SEARCH+=("^c0:d1:f1:ed")
SEARCH+=("c0:d1:f1:ed$")
SEARCH+=("^c0:ff:ea")
SEARCH+=("c0:ff:ea$")
SEARCH+=("^c0:ff:ee")
SEARCH+=("c0:ff:ee$")
SEARCH+=("^c0:1f:fe")
SEARCH+=("c0:1f:fe$")
SEARCH+=("^c0:11:ed")
SEARCH+=("c0:11:ed$")
SEARCH+=("^c0:11:1e")
SEARCH+=("c0:11:1e$")
SEARCH+=("^c0:11:0c:a1:1a")
SEARCH+=("c0:11:0c:a1:1a$")
SEARCH+=("^c0:10:55:a1")
SEARCH+=("c0:10:55:a1$")
SEARCH+=("^c0:01:ed")
SEARCH+=("c0:01:ed$")
SEARCH+=("^c0:01:1e")
SEARCH+=("c0:01:1e$")
SEARCH+=("^da:bb:1e")
SEARCH+=("da:bb:1e$")
SEARCH+=("^da:b0:ec:1a")
SEARCH+=("da:b0:ec:1a$")
SEARCH+=("^da:ce:10")
SEARCH+=("da:ce:10$")
SEARCH+=("^da:ff:0d:11")
SEARCH+=("da:ff:0d:11$")
SEARCH+=("^da:1a:51")
SEARCH+=("da:1a:51$")
SEARCH+=("^da:11:a5")
SEARCH+=("da:11:a5$")
SEARCH+=("^da:55:1e")
SEARCH+=("da:55:1e$")
SEARCH+=("^da:22:1e")
SEARCH+=("da:22:1e$")
SEARCH+=("^de:ba:5e")
SEARCH+=("de:ba:5e$")
SEARCH+=("^de:ca:de")
SEARCH+=("de:ca:de$")
SEARCH+=("^de:ce:a5:ed")
SEARCH+=("de:ce:a5:ed$")
SEARCH+=("^de:c1:de")
SEARCH+=("de:c1:de$")
SEARCH+=("^de:c1:1e")
SEARCH+=("de:c1:1e$")
SEARCH+=("de:c1:a5:51:f1:ed")
SEARCH+=("^de:c0:de")
SEARCH+=("de:c0:de$")
SEARCH+=("^de:fa:ce")
SEARCH+=("de:fa:ce$")
SEARCH+=("^de:fe:a5:1b:1e")
SEARCH+=("de:fe:a5:1b:1e$")
SEARCH+=("^de:f1:1a:de")
SEARCH+=("de:f1:1a:de$")
SEARCH+=("^de:f1:1e")
SEARCH+=("de:f1:1e$")
SEARCH+=("^de:1f:1c")
SEARCH+=("de:1f:1c$")
SEARCH+=("^d1:ab:01:1c")
SEARCH+=("d1:ab:01:1c$")
SEARCH+=("^d1:ab:01:1c:a1")
SEARCH+=("d1:ab:01:1c:a1$")
SEARCH+=("^d1:bb:1e")
SEARCH+=("d1:bb:1e$")
SEARCH+=("^d1:dd:1e")
SEARCH+=("d1:dd:1e$")
SEARCH+=("^d1:e5:e1")
SEARCH+=("d1:e5:e1$")
SEARCH+=("^d1:e5:e5")
SEARCH+=("d1:e5:e5$")
SEARCH+=("^d1:5a:b1:ed")
SEARCH+=("d1:5a:b1:ed$")
SEARCH+=("^d1:5c:10:5e")
SEARCH+=("d1:5c:10:5e$")
SEARCH+=("^d1:5e:a5:ed")
SEARCH+=("d1:5e:a5:ed$")
SEARCH+=("^d0:ab:1e")
SEARCH+=("d0:ab:1e$")
SEARCH+=("^d0:c1:1e")
SEARCH+=("d0:c1:1e$")
SEARCH+=("^d0:dd:1e")
SEARCH+=("d0:dd:1e$")
SEARCH+=("^d0:11:01:1d:ae")
SEARCH+=("d0:11:01:1d:ae$")
SEARCH+=("^d0:0d:ad")
SEARCH+=("d0:0d:ad$")
SEARCH+=("^d0:0d:1a")
SEARCH+=("d0:0d:1a$")
SEARCH+=("^d0:0d:1e")
SEARCH+=("d0:0d:1e$")
SEARCH+=("^ea:c1:e5")
SEARCH+=("ea:c1:e5$")
SEARCH+=("^ec:c1:e5")
SEARCH+=("ec:c1:e5$")
SEARCH+=("^ec:e5:15")
SEARCH+=("ec:e5:15$")
SEARCH+=("^ec:05:0c")
SEARCH+=("ec:05:0c$")
SEARCH+=("^ed:1b:1e")
SEARCH+=("ed:1b:1e$")
SEARCH+=("^ef:fa:ce")
SEARCH+=("ef:fa:ce$")
SEARCH+=("ef:fa:ce:ab:1e")
SEARCH+=("^e1:ff:e1")
SEARCH+=("e1:ff:e1$")
SEARCH+=("^e1:ae:15")
SEARCH+=("e1:ae:15$")
SEARCH+=("^e1:0d:ea")
SEARCH+=("e1:0d:ea$")
SEARCH+=("^e1:5a:55")
SEARCH+=("e1:5a:55$")
SEARCH+=("^e5:ca:1a:de")
SEARCH+=("e5:ca:1a:de$")
SEARCH+=("^e5:0c:1d:ae")
SEARCH+=("e5:0c:1d:ae$")
SEARCH+=("^fa:ba:ce:ae")
SEARCH+=("fa:ba:ce:ae$")
SEARCH+=("^fa:b1:ed")
SEARCH+=("fa:b1:ed$")
SEARCH+=("^fa:ca:de")
SEARCH+=("fa:ca:de$")
SEARCH+=("^fa:ce:1e:55")
SEARCH+=("fa:ce:1e:55$")
SEARCH+=("^fa:c1:a1")
SEARCH+=("fa:c1:a1$")
SEARCH+=("^fa:c1:1e")
SEARCH+=("fa:c1:1e$")
SEARCH+=("^fa:ec:a1")
SEARCH+=("fa:ec:a1$")
SEARCH+=("^fa:ec:e5")
SEARCH+=("fa:ec:e5$")
SEARCH+=("^fa:11:ed")
SEARCH+=("fa:11:ed$")
SEARCH+=("^fa:11:1e")
SEARCH+=("fa:11:1e$")
SEARCH+=("^fa:15:a1")
SEARCH+=("fa:15:a1$")
SEARCH+=("fa:15:a1:ab:ad")
SEARCH+=("^fa:11:a1")
SEARCH+=("fa:11:a1$")
SEARCH+=("^fa:11:1b:1e")
SEARCH+=("fa:11:1b:1e$")
SEARCH+=("^fa:15:1e")
SEARCH+=("fa:15:1e$")
SEARCH+=("^fa:5c:e5")
SEARCH+=("fa:5c:e5$")
SEARCH+=("^fa:5c:1a")
SEARCH+=("fa:5c:1a$")
SEARCH+=("^fa:5c:1c:1e")
SEARCH+=("fa:5c:1c:1e$")
SEARCH+=("^fa:5c:10:1a")
SEARCH+=("fa:5c:10:1a$")
SEARCH+=("fa:5c:10:11:a5:15")
SEARCH+=("^fe:a5:1b:1e")
SEARCH+=("fe:a5:1b:1e$")
SEARCH+=("^fe:eb:1e")
SEARCH+=("fe:eb:1e$")
SEARCH+=("^fe:11:ed")
SEARCH+=("fe:11:ed$")
SEARCH+=("^fe:11:0e")
SEARCH+=("fe:11:0e$")
SEARCH+=("^fe:05:01")
SEARCH+=("fe:05:01$")
SEARCH+=("^f1:a5:c0")
SEARCH+=("f1:a5:c0$")
SEARCH+=("^f1:dd:1e")
SEARCH+=("f1:dd:1e$")
SEARCH+=("^f1:e1:d5")
SEARCH+=("f1:e1:d5$")
SEARCH+=("^f1:11:a1")
SEARCH+=("f1:11:a1$")
SEARCH+=("^f1:11:ed")
SEARCH+=("f1:11:ed$")
SEARCH+=("^f1:5c:a1")
SEARCH+=("f1:5c:a1$")
SEARCH+=("^f1:22:1e")
SEARCH+=("f1:22:1e$")
SEARCH+=("^f1:ee:ce")
SEARCH+=("f1:ee:ce$")
SEARCH+=("^f1:ee:ce:ab:1e")
SEARCH+=("f1:ee:ce:ab:1e$")
SEARCH+=("^f1:0c:c0:5e")
SEARCH+=("f1:0c:c0:5e$")
SEARCH+=("^f0:a1:ed")
SEARCH+=("f0:a1:ed$")
SEARCH+=("^f0:ca:11:5e")
SEARCH+=("f0:ca:11:5e$")
SEARCH+=("^f0:ca:11:2e")
SEARCH+=("f0:ca:11:2e$")
SEARCH+=("^f0:1b:1e")
SEARCH+=("f0:1b:1e$")
SEARCH+=("^f0:11:ed")
SEARCH+=("f0:11:ed$")
SEARCH+=("^f0:1d:ab:1e")
SEARCH+=("f0:1d:ab:1e$")
SEARCH+=("^f0:1d:ed")
SEARCH+=("f0:1d:ed$")
SEARCH+=("^f0:11:1c:1e")
SEARCH+=("f0:11:1c:1e$")
SEARCH+=("^f0:0d:1e:55")
SEARCH+=("f0:0d:1e:55$")
SEARCH+=("^f0:55:11")
SEARCH+=("f0:55:11$")
SEARCH+=("f0:55:11:15:ed")
SEARCH+=("f0:55:11:12:ed")
SEARCH+=("^1c:1c:1e")
SEARCH+=("1c:1c:1e$")
SEARCH+=("^1d:ea:11:5e")
SEARCH+=("1d:ea:11:5e$")
SEARCH+=("^1d:ea:11:2e")
SEARCH+=("1d:ea:11:2e$")
SEARCH+=("^1d:e5:1a")
SEARCH+=("1d:e5:1a$")
SEARCH+=("^1d:01:15:ed")
SEARCH+=("1d:01:15:ed$")
SEARCH+=("^1d:01:12:ed")
SEARCH+=("1d:01:12:ed$")
SEARCH+=("^10:d1:de")
SEARCH+=("10:d1:de$")
SEARCH+=("^10:d1:5e")
SEARCH+=("10:d1:5e$")
SEARCH+=("^10:d1:2e")
SEARCH+=("10:d1:2e$")
SEARCH+=("^15:01:ab:1e")
SEARCH+=("15:01:ab:1e$")
SEARCH+=("^1a:be:11:ed")
SEARCH+=("1a:be:11:ed$")
SEARCH+=("^1a:b1:a1")
SEARCH+=("1a:b1:a1$")
SEARCH+=("^1a:b1:1e")
SEARCH+=("1a:b1:1e$")
SEARCH+=("^1a:b1:ab")
SEARCH+=("1a:b1:ab$")
SEARCH+=("^1a:dd:1e")
SEARCH+=("1a:dd:1e$")
SEARCH+=("^1a:e1:1a")
SEARCH+=("1a:e1:1a$")
SEARCH+=("^1a:55:1e")
SEARCH+=("1a:55:1e$")
SEARCH+=("^1e:ad:ed")
SEARCH+=("1e:ad:ed$")
SEARCH+=("^1e:ad:1e:55")
SEARCH+=("1e:ad:1e:55$")
SEARCH+=("^1e:af:ed")
SEARCH+=("1e:af:ed$")
SEARCH+=("^1e:af:1e:55")
SEARCH+=("1e:af:1e:55$")
SEARCH+=("^1e:a5:ed")
SEARCH+=("1e:a5:ed$")
SEARCH+=("^1e:5b:05")
SEARCH+=("1e:5b:05$")
SEARCH+=("^1e:5c:01")
SEARCH+=("1e:5c:01$")
SEARCH+=("^1e:55:ee")
SEARCH+=("1e:55:ee$")
SEARCH+=("^11:ab:1e")
SEARCH+=("11:ab:1e$")
SEARCH+=("^11:a1:5e")
SEARCH+=("11:a1:5e$")
SEARCH+=("^11:b1:d0")
SEARCH+=("11:b1:d0$")
SEARCH+=("^11:dd:ed")
SEARCH+=("11:dd:ed$")
SEARCH+=("^11:fe:1e:55")
SEARCH+=("11:fe:1e:55$")
SEARCH+=("^11:fe:51:2e")
SEARCH+=("11:fe:51:2e$")
SEARCH+=("^11:11:a1:e5")
SEARCH+=("11:11:a1:e5$")
SEARCH+=("^11:11:1d:ae")
SEARCH+=("11:11:1d:ae$")
SEARCH+=("^11:11:1e")
SEARCH+=("11:11:1e$")
SEARCH+=("^11:5b:0a")
SEARCH+=("11:5b:0a$")
SEARCH+=("^10:ad:ed")
SEARCH+=("10:ad:ed$")
SEARCH+=("^10:ca:1e")
SEARCH+=("10:ca:1e$")
SEARCH+=("^10:ca:11:5e")
SEARCH+=("10:ca:11:5e$")
SEARCH+=("^10:ca:11:2e")
SEARCH+=("10:ca:11:2e$")
SEARCH+=("^10:55:e5")
SEARCH+=("10:55:e5$")
SEARCH+=("^0b:5e:55")
SEARCH+=("0b:5e:55$")
SEARCH+=("^0b:5e:55:ed")
SEARCH+=("0b:5e:55:ed$")
SEARCH+=("^0d:e5:5a")
SEARCH+=("0d:e5:5a$")
SEARCH+=("^0f:f1:ce")
SEARCH+=("0f:f1:ce$")
SEARCH+=("^0f:f1:c1:a1")
SEARCH+=("0f:f1:c1:a1$")
SEARCH+=("^0f:f5:1d:e5")
SEARCH+=("0f:f5:1d:e5$")
SEARCH+=("^01:1f:1e:1d")
SEARCH+=("01:1f:1e:1d$")
SEARCH+=("^01:df:1e:1d")
SEARCH+=("01:df:1e:1d$")
SEARCH+=("^01:ea:ce:ae")
SEARCH+=("01:ea:ce:ae$")
SEARCH+=("^00:d1:e5")
SEARCH+=("00:d1:e5$")
SEARCH+=("^05:a5:c0")
SEARCH+=("05:a5:c0$")
SEARCH+=("^05:51:f1:ed")
SEARCH+=("05:51:f1:ed$")
SEARCH+=("^5a:dd:1e")
SEARCH+=("5a:dd:1e$")
SEARCH+=("^5a:dd:1e:b1:11")
SEARCH+=("5a:dd:1e:b1:11$")
SEARCH+=("^5a:1e:ab:1e")
SEARCH+=("5a:1e:ab:1e$")
SEARCH+=("^5a:11:ca:ce:ae")
SEARCH+=("5a:11:ca:ce:ae$")
SEARCH+=("^5a:15:11:1a")
SEARCH+=("5a:15:11:1a$")
SEARCH+=("^5c:ab:10:5a")
SEARCH+=("5c:ab:10:5a$")
SEARCH+=("^5c:af:f0:1d")
SEARCH+=("5c:af:f0:1d$")
SEARCH+=("^5c:a1:ab:1e")
SEARCH+=("5c:a1:ab:1e$")
SEARCH+=("^5c:a1:ed")
SEARCH+=("5c:a1:ed$")
SEARCH+=("^5c:a1:1c")
SEARCH+=("5c:a1:1c$")
SEARCH+=("^5c:11:1a")
SEARCH+=("5c:11:1a$")
SEARCH+=("^5c:1a:ff")
SEARCH+=("5c:1a:ff$")
SEARCH+=("^5e:ab:ed")
SEARCH+=("5e:ab:ed$")
SEARCH+=("^5e:a1:ed")
SEARCH+=("5e:a1:ed$")
SEARCH+=("^5e:ca:1e")
SEARCH+=("5e:ca:1e$")
SEARCH+=("^5e:ce:de")
SEARCH+=("5e:ce:de$")
SEARCH+=("^5e:ed:ca:5e")
SEARCH+=("5e:ed:ca:5e$")
SEARCH+=("^5e:ed:ed")
SEARCH+=("5e:ed:ed$")
SEARCH+=("^5e:ed:1e:55")
SEARCH+=("5e:ed:1e:55$")
SEARCH+=("^5e:1d:e1")
SEARCH+=("5e:1d:e1$")
SEARCH+=("^5e:12:ed")
SEARCH+=("5e:12:ed$")
SEARCH+=("^5e:1f:1e:55")
SEARCH+=("5e:1f:1e:55$")
SEARCH+=("^5e:11:ab:1e")
SEARCH+=("5e:11:ab:1e$")
SEARCH+=("^5e:5e:11")
SEARCH+=("5e:5e:11$")
SEARCH+=("^51:a1:1a")
SEARCH+=("51:a1:1a$")
SEARCH+=("^51:a1:1d:ae")
SEARCH+=("51:a1:1d:ae$")
SEARCH+=("^51:a1:15")
SEARCH+=("51:a1:15$")
SEARCH+=("^51:da:1c:ea")
SEARCH+=("51:da:1c:ea$")
SEARCH+=("^51:de:5a:dd:1e")
SEARCH+=("51:de:5a:dd:1e$")
SEARCH+=("^51:11:ca")
SEARCH+=("51:11:ca$")
SEARCH+=("^51:11:c1:de")
SEARCH+=("51:11:c1:de$")
SEARCH+=("^51:55:00")
SEARCH+=("51:55:00$")
SEARCH+=("^51:2e:ab:1e")
SEARCH+=("51:2e:ab:1e$")
SEARCH+=("^51:22:1e")
SEARCH+=("51:22:1e$")
SEARCH+=("^51:ea:2e")
SEARCH+=("51:ea:2e$")
SEARCH+=("^51:1c:ed")
SEARCH+=("51:1c:ed$")
SEARCH+=("^50:c1:ab:1e")
SEARCH+=("50:c1:ab:1e$")
SEARCH+=("^50:c1:a1")
SEARCH+=("50:c1:a1$")
SEARCH+=("^50:c1:a1:15:ed")
SEARCH+=("50:c1:a1:15:ed$")
SEARCH+=("^50:c1:a1:12:ed")
SEARCH+=("50:c1:a1:12:ed$")
SEARCH+=("^50:11:ed")
SEARCH+=("50:11:ed$")
SEARCH+=("^50:1a:ce")
SEARCH+=("50:1a:ce$")
SEARCH+=("^50:1e:1d:ae")
SEARCH+=("50:1e:1d:ae$")
SEARCH+=("^50:1e:1e:55")
SEARCH+=("50:1e:1e:55$")
SEARCH+=("^50:11:d1:f1:ed")
SEARCH+=("50:11:d1:f1:ed$")
SEARCH+=("^2e:1d:ae")
SEARCH+=("2e:1d:ae$")
SEARCH+=("^20:d1:ac")
SEARCH+=("20:d1:ac$")
SEARCH+=("^20:d1:ac:a1")
SEARCH+=("20:d1:ac:a1$")
SEARCH+=("^20:15:1a")
SEARCH+=("20:15:1a$")
#SEARCH+=("([0-9a-z][0-9a-z]:*){16}")	# A test pattern. 16 pairs of hexdigits, matches every fingerprint.
#SEARCH+=(":")		# uncomment to save every key generated

#
# These egrep patterns aren't as rare as they appear visually. 
# An external program is required for checking these because Bash
# regex doesn't support back references :-(.

# FINGERPRINTs: d5:07:1d:69:95:c3:f6:8b:67:43:56:3a:7a:b2:df:df

PATTERN=()
PATTERN+=("^\(.\)\(.\):\(.\)\(.\):\(.\)\(.\):.*:\\6\\5:\\4\\3:\\2\\1$")
PATTERN+=("^\(..\):\(..\):\(..\):.*:\\1:\\2:\\3$")
PATTERN+=("^\(..\):\(..\):\(..\):.*:\\3:\\2:\\1$")
PATTERN+=("^\(..:..:..:..:..:..:..:..\):\\1")
PATTERN+=("\([0-9a-f][0-9a-f]\).*\\1.*\\1.*\\1.*\\1.*\\1")
PATTERN+=("\([0-9a-f]\).*\\1.*\\1.*\\1.*\\1.*\\1.*\\1.*\\1.*\\1.*\\1.*\\1.*\\1")
#PATTERN+=("\([0-9a-z][0-9a-z]:*\)\{16\}")	# test pattern matching every fingerprint


# Largest positive integer in bash 9,223,372,036,854,775,807

# Largest integer in BASH 9223372036854775807

CNTEND=1073741824	# 2^30 (1073741824) is a decade of run time on a single core CPU
#CNTEND=256

OLDSTAT=""		# result of previous status
stats() { 
    trap - SIGINT	# First cntrl-c will display last key checked, next one within a few seconds exits program
    echo "${OLDSTAT} / $(date)"
    sleep 2
    trap stats SIGINT
}

# Create a random prefix to make each run's filenames somewhat unique else they will be overwritten by other runs.
ABC=('A' 'B' 'C' 'D' 'E' 'F' 'G' 'H' 'I' 'J' 'K' 'L' 'M' 'N' 'O' 'P' 'Q' 'R' 'S' 'T' 'U' 'V' 'W' 'X' 'Y' 'Z')
PRE="${ABC[$(( ${RANDOM} % 26 ))]}${ABC[$(( ${RANDOM} % 26 ))]}${ABC[$(( ${RANDOM} % 26 ))]}" # 1 in 17576

echo "BEGIN RUN USING PREFIX ${PRE} / PROCESS ID (${$}) $(date)"
trap stats SIGINT		# sending kill -SIGINT (^C) to the process displays last fingerprint

CNT=1
while [ ${CNT} -le ${CNTEND} ]
do
    SECKEY="${PRE}-${CNT}.key"
    PUBKEY="${SECKEY}.pub"

    if [ -a ${SECKEY} ] ; then rm "${SECKEY}" ; fi  # if key file exists then remove it else ssh-keygen gets stuck
    if [ -a ${PUBKEY} ] ; then rm "${PUBKEY}" ; fi

    ssh-keygen -q -t rsa -b 2048 -f ${SECKEY} -N "" -C "${EMAIL}"

    if [ -a ${SECKEY} ] ; then FINGERPRINT=$(ssh-keygen -l -f ${SECKEY} | cut -d " " -f 2) ; else FINGERPRINT="" ; fi

    #FINGERPRINT="aa:00:ab:1b:ab:ba:b2:ab:aa:aa:11:aa:bb:aa:aa:88"	#Test pattern

    STATUS="#${PRE}-${CNT}: ${FINGERPRINT}"

    #
    # SEARCH fingerprint for each desired pattern
    #

    FOUND="FALSE"
    for VAL in ${SEARCH[*]}
    do
       #echo "SEARCH >${VAL}<"
       if [[ "${FINGERPRINT}" =~ ${VAL} ]] 
       then
          FOUND="TRUE"
          STATUS="${STATUS} CONTAINS SEARCH (${VAL})"
          echo ${STATUS}
          break
       fi
    done

    if [ ${FOUND} == "FALSE" ]
    then
      for VAL in ${PATTERN[*]}
      do
          #echo "PATTERN >${VAL}<"
          RESULT=$( echo "${FINGERPRINT}" | grep -i -e "${VAL}" )
          if [[ "${RESULT}" =~ "${FINGERPRINT}" ]]
          then
              FOUND="TRUE"
              STATUS="${STATUS} CONTAINS PATTERN (${VAL})"
              echo ${STATUS}
              break
          fi
      done

    fi

    # no SEARCH pattern matched, delete keys
    if [ ${FOUND} == "FALSE" ]
    then
       if [ -a ${SECKEY} ] ; then rm "${SECKEY}" ; fi
       if [ -a ${PUBKEY} ] ; then rm "${PUBKEY}" ; fi
    fi

    #echo ${STATUS}	# uncomment to see all the keys as they are generated, useful when adding search patterns

    OLDSTAT=${STATUS}	# OLDSTAT is what is printed with CNTRL-C

    CNT=$(( ${CNT} + 1 ))

done

